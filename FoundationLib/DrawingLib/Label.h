// Label.h: interface for the CLabel class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_LABEL_H__715C6C15_54CC_489C_A01B_D130516D7346__INCLUDED_)
#define AFX_LABEL_H__715C6C15_54CC_489C_A01B_D130516D7346__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#pragma warning(disable : 4786)

#include "Rectangle.h"
#include <string>

class CLabel : public CRectangle  
{
public:
	CLabel();
	CLabel(int left, int top, int right, int bottom, std::string caption, COLORREF color=RGB(0,0,0), int textAlign=0);
	CLabel(CRect rect, std::string caption, COLORREF color=RGB(0,0,0), int textAlign=0);
	virtual ~CLabel();

	// 属性
	
	// 获取和设置文本内容
	std::string getCaption();
	void setCaption(std::string caption);

	// 获取和设置前景色
	COLORREF getForeColor();
	void setForeColor(COLORREF color);

	// 获取和设置文本对齐方式
	int getTextAlign();
	void setTextAlign(int textAlign);

	// 获取和设置字体
	tagLOGFONTA getFont();
	void setFont(tagLOGFONTA font);

	// 文字是否允许折行显示
	BOOL isTextWrapped() const { return m_textWrapped; }
	void setTextWrapped(BOOL val) { m_textWrapped = val; }
	
	// 方法
	virtual void drawMe(CDC *pDC, CPoint point);
	void move(CSize moveShift);            // 移动绘制对象，对于矩形类型的绘制对象，该点表示矩形的左上角；对于线型（直线或折线），该点表示第一个端点

protected:
	virtual void preparePenAndBrush(CDC *pDC);  // 在绘图前，先准备好笔和画刷
	virtual void restorePenAndBrush(CDC *pDC);  // 绘图之后，恢复原来的笔和画刷

protected:
	std::string m_caption;
	COLORREF m_foreColor;
	int m_textAlign;
	LOGFONT m_logFont;
	CFont m_font;
	CFont *m_oldFont;

	BOOL m_textWrapped;  // 文字是否允许折行显示
};

#endif // !defined(AFX_LABEL_H__715C6C15_54CC_489C_A01B_D130516D7346__INCLUDED_)
