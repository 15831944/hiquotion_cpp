Drawing 类库

提供 矩形、圆角矩形、圆形、椭圆形、chord、饼图直线、折线、贝塞尔曲线、弧 等基本图形以及 图片和文字的显示 等等功能

提供一个容器类，可以向其中添加子图形。目前，椭圆、文字（标签）、图片、圆角矩形继承了矩形，而矩形继承了容器类，所以它们都可以在自身中添加子图形

目前存在的问题：

1、针对draw函数，应该提炼出kernalDraw函数，用于真正的执行画图形操作，要不每个类都重写该函数，draw函数的继承就没有什么意义了【发现这个还是不好做，就先不做了，用GDI+以后，看是否可以重构一下】

2、针对CContainer类，其中绘图的时候使用的CRng，作为类成员定义（或者是其指针形式定义），再定义一个类型类成员变量，用来指定Rng区域类型，比如
0矩形、1圆角矩形、2椭圆形。可以把创建Rng的代码放到一个虚函数当中，这样，子类如果需要自定义创建的Rng区域，可以继承这个虚函数


以后还可以考虑增加的功能

所有颜色的透明度看怎么设置上
  AlphaBlend函数可以给区域图形在图形叠加时实现透明度
  对于IShape图形，如果设置无背景色，那么AlphaBlend就需要使用图像的Alpha通道，而不是固定的透明度值，并且要求图像是PARGB格式的，如果是针对线条（背景透明）则比较麻烦

用GDI+绘制半透明效果

    步骤1) 创建半透明画刷

        m_pBrush = new SolidBrush(Color(128, GetRValue(clrMask), GetGValue(clrMask), GetBValue(clrMask))); // 透明度 128


    步骤2）使用画刷绘图

         Graphics graphics(hDC);
         graphics.FillPolygon(&m_pBrush, pts, 3, FillModeAlternate); 

效率: GDI+  >  GDI。

使用GDI+绘图简单而高效，所以推荐使用GDI+。



针对二维图形，可以设置阴影，阴影颜色和透明度
针对文字显示，可以设置文字描边和文字阴影，边框颜色与阴影颜色，边框透明度和阴影透明度，文字描边宽度，阴影与文字的距离等

往程序界面上做，可以考虑制作各种自绘控件、自绘窗体等
往图像编辑方面做，可以考虑给图片加文字、特效图形等
往图形编辑器上做，可以制作矢量图图形编辑程序、UML工具等等
也可以做成一个扑克牌游戏
