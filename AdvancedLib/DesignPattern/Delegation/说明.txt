用户拥有一个委托人(IDelegator)，委托人拥有若干代理人(IAgent)。委托人可以委托(delegate方法)，代理人可以代理(agent方法)。如果delegate方法带有参数，那么通常是关心将参数送达。

代理人也可以拥有委托人（第二委托人），将委托人（第一委托人）委托他的任务转交给第二委托人的代理去做。

用户委托给委托人一个任务（即调用IDelegator的delegate方法），委托人则把这个任务转交给代理人完成（即调用IAgent的agent方法）。

委托人委托任务，可以有几种方式，第一种是把任务交给所有代理去完成，比如消息广播；第二种是看谁能完成这个任务，即职责链；第三种是把任务分成若干部分，每个代理人做其中一部分。第三种又分为两种情况，如果这若干部分之间相互独立，则直接分配给代理人即可，比如下载任务分块；如果这若干部分有先后次序（那么似乎不分成若干部分更合适）。

若干代理人完成任务，对于第一种和第三种的第一种情况，可以是单线程的，也可以是多线程的；第二种情况是单线程的。

委托人本身，可以是单线程的（上面的情况），也可以是多线程的。这时委托人内部相当于是生产消费模式，比如界面的消息处理中的PostMessage，以及现实中的物流。对于界面消息处理，用户也是代理人。

***

delegate 方法
int IDelegator.delegate(IParameter *para);

agent 方法
int IAgent.agent(IParameter *para);
